{
	"_info": "Auto-generated by pandoc-url2cite. Feel free to modify, keys will never be overwritten.",
	"urls": {
		"https://www.tandfonline.com/doi/abs/10.1080/14794713.2016.1227602?journalCode=rpdm20": {
			"fetched": "2022-03-24T12:17:27.481Z",
			"bibtex": [
				"",
				"@article{roberts_code_2016,",
				"   title = {Code as information and code as spectacle},",
				"   volume = {12},",
				"   issn = {1479-4713},",
				"   url = {https://doi.org/10.1080/14794713.2016.1227602},",
				"   doi = {10.1080/14794713.2016.1227602},",
				"   abstract = {In this artist statement, I will discuss the tension between source code as an interactive system for performers and source code as information and entertainment for audiences in live-coding performances. I then describe augmentations I developed for the presentation of source code in the live-coding environment Gibber, including animations and annotations that visually reveal aspects of system state during performances. I briefly describe audience responses to these techniques and, more importantly, how they are critical to my own artistic practice.},",
				"   number = {2},",
				"   urldate = {2022-03-24},",
				"   journal = {International Journal of Performance Arts and Digital Media},",
				"   author = {Roberts, Charles},",
				"   month = jul,",
				"   year = {2016},",
				"   keywords = {Live coding, psychology of programming, notation, audiences, algorithms},",
				"   pages = {201--206},",
				"}",
				""
			],
			"csl": {
				"DOI": "10.1080/14794713.2016.1227602",
				"ISSN": "1479-4713",
				"URL": "https://doi.org/10.1080/14794713.2016.1227602",
				"abstract": "In this artist statement, I will discuss the tension between source code as an interactive system for performers and source code as information and entertainment for audiences in live-coding performances. I then describe augmentations I developed for the presentation of source code in the live-coding environment Gibber, including animations and annotations that visually reveal aspects of system state during performances. I briefly describe audience responses to these techniques and, more importantly, how they are critical to my own artistic practice.",
				"accessed": {
					"date-parts": [
						[
							2022,
							3,
							24
						]
					]
				},
				"author": [
					{
						"family": "Roberts",
						"given": "Charles"
					}
				],
				"container-title": "International Journal of Performance Arts and Digital Media",
				"id": "https://www.tandfonline.com/doi/abs/10.1080/14794713.2016.1227602?journalCode_x61_rpdm20",
				"issue": "2",
				"issued": {
					"date-parts": [
						[
							2016,
							7
						]
					]
				},
				"keyword": "Live coding, psychology of programming, notation, audiences, algorithms",
				"page": "201-206",
				"title": "Code as information and code as spectacle",
				"type": "article-journal",
				"volume": "12"
			}
		},
		"https://zenodo.org/record/5788732": {
			"fetched": "2022-03-24T12:20:17.218Z",
			"bibtex": [
				"",
				"@misc{mclean_alternate_2021,",
				"   address = {Valdivia, Chile},",
				"   title = {Alternate {Timelines} for {TidalCycles}},",
				"   url = {https://zenodo.org/record/5788732},",
				"   abstract = {The TidalCycles (or Tidal for short) live coding environment has been developed since around 2009, via several rewrites of its core representation. Rather than having fixed goals, this development has been guided by use, motivated by the open aim to make music. This development process can be seen as a long-form improvisation, with insights into the nature of Tidal gained through the process of writing it, feeding back to guide the next steps of development. This brings the worrying thought that key insights will have been missed along this development journey, that would otherwise have lead to very different software. Indeed participants at beginners’ workshops that I have lead or co-lead have often asked questions without good answers, because they made deficiencies or missing features in the software clear. It is well known that a beginner’s mind is able to see much that an expert has become blind to. Running workshops are an excellent way to find new development ideas, but the present paper explores a different technique – the rewrite.},",
				"   urldate = {2022-03-24},",
				"   collaborator = {McLean, Alex},",
				"   month = dec,",
				"   year = {2021},",
				"   keywords = {live coding, algorithmic pattern, tidalcycles, haskell, python},",
				"}",
				""
			],
			"csl": {
				"URL": "https://zenodo.org/record/5788732",
				"abstract": "The TidalCycles (or Tidal for short) live coding environment has been developed since around 2009, via several rewrites of its core representation. Rather than having fixed goals, this development has been guided by use, motivated by the open aim to make music. This development process can be seen as a long-form improvisation, with insights into the nature of Tidal gained through the process of writing it, feeding back to guide the next steps of development. This brings the worrying thought that key insights will have been missed along this development journey, that would otherwise have lead to very different software. Indeed participants at beginners’ workshops that I have lead or co-lead have often asked questions without good answers, because they made deficiencies or missing features in the software clear. It is well known that a beginner’s mind is able to see much that an expert has become blind to. Running workshops are an excellent way to find new development ideas, but the present paper explores a different technique – the rewrite.",
				"accessed": {
					"date-parts": [
						[
							2022,
							3,
							24
						]
					]
				},
				"id": "https://zenodo.org/record/5788732",
				"issued": {
					"date-parts": [
						[
							2021,
							12
						]
					]
				},
				"keyword": "live coding, algorithmic pattern, tidalcycles, haskell, python",
				"publisher-place": "Valdivia, Chile",
				"title": "Alternate Timelines for TidalCycles",
				"type": ""
			}
		}
	}
}