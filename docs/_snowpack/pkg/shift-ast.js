import { _ as __pika_web_default_export_for_treeshaking__, d as dist } from './common/index-1e63141f.js';
export { d as __moduleExports, _ as default } from './common/index-1e63141f.js';
import './common/_commonjsHelpers-8c19dec8.js';



var ArrayAssignmentTarget = dist.ArrayAssignmentTarget;
var ArrayBinding = dist.ArrayBinding;
var ArrayExpression = dist.ArrayExpression;
var ArrowExpression = dist.ArrowExpression;
var AssignmentExpression = dist.AssignmentExpression;
var AssignmentTargetIdentifier = dist.AssignmentTargetIdentifier;
var AssignmentTargetPropertyIdentifier = dist.AssignmentTargetPropertyIdentifier;
var AssignmentTargetPropertyProperty = dist.AssignmentTargetPropertyProperty;
var AssignmentTargetWithDefault = dist.AssignmentTargetWithDefault;
var AwaitExpression = dist.AwaitExpression;
var BinaryExpression = dist.BinaryExpression;
var BindingIdentifier = dist.BindingIdentifier;
var BindingPropertyIdentifier = dist.BindingPropertyIdentifier;
var BindingPropertyProperty = dist.BindingPropertyProperty;
var BindingWithDefault = dist.BindingWithDefault;
var Block = dist.Block;
var BlockStatement = dist.BlockStatement;
var BreakStatement = dist.BreakStatement;
var CallExpression = dist.CallExpression;
var CatchClause = dist.CatchClause;
var ClassDeclaration = dist.ClassDeclaration;
var ClassElement = dist.ClassElement;
var ClassExpression = dist.ClassExpression;
var CompoundAssignmentExpression = dist.CompoundAssignmentExpression;
var ComputedMemberAssignmentTarget = dist.ComputedMemberAssignmentTarget;
var ComputedMemberExpression = dist.ComputedMemberExpression;
var ComputedPropertyName = dist.ComputedPropertyName;
var ConditionalExpression = dist.ConditionalExpression;
var ContinueStatement = dist.ContinueStatement;
var DataProperty = dist.DataProperty;
var DebuggerStatement = dist.DebuggerStatement;
var Directive = dist.Directive;
var DoWhileStatement = dist.DoWhileStatement;
var EmptyStatement = dist.EmptyStatement;
var Export = dist.Export;
var ExportAllFrom = dist.ExportAllFrom;
var ExportDefault = dist.ExportDefault;
var ExportFrom = dist.ExportFrom;
var ExportFromSpecifier = dist.ExportFromSpecifier;
var ExportLocalSpecifier = dist.ExportLocalSpecifier;
var ExportLocals = dist.ExportLocals;
var ExpressionStatement = dist.ExpressionStatement;
var ForAwaitStatement = dist.ForAwaitStatement;
var ForInStatement = dist.ForInStatement;
var ForOfStatement = dist.ForOfStatement;
var ForStatement = dist.ForStatement;
var FormalParameters = dist.FormalParameters;
var FunctionBody = dist.FunctionBody;
var FunctionDeclaration = dist.FunctionDeclaration;
var FunctionExpression = dist.FunctionExpression;
var Getter = dist.Getter;
var IdentifierExpression = dist.IdentifierExpression;
var IfStatement = dist.IfStatement;
var Import = dist.Import;
var ImportNamespace = dist.ImportNamespace;
var ImportSpecifier = dist.ImportSpecifier;
var LabeledStatement = dist.LabeledStatement;
var LiteralBooleanExpression = dist.LiteralBooleanExpression;
var LiteralInfinityExpression = dist.LiteralInfinityExpression;
var LiteralNullExpression = dist.LiteralNullExpression;
var LiteralNumericExpression = dist.LiteralNumericExpression;
var LiteralRegExpExpression = dist.LiteralRegExpExpression;
var LiteralStringExpression = dist.LiteralStringExpression;
var Method = dist.Method;
var Module = dist.Module;
var NewExpression = dist.NewExpression;
var NewTargetExpression = dist.NewTargetExpression;
var ObjectAssignmentTarget = dist.ObjectAssignmentTarget;
var ObjectBinding = dist.ObjectBinding;
var ObjectExpression = dist.ObjectExpression;
var ReturnStatement = dist.ReturnStatement;
var Script = dist.Script;
var Setter = dist.Setter;
var ShorthandProperty = dist.ShorthandProperty;
var SpreadElement = dist.SpreadElement;
var SpreadProperty = dist.SpreadProperty;
var StaticMemberAssignmentTarget = dist.StaticMemberAssignmentTarget;
var StaticMemberExpression = dist.StaticMemberExpression;
var StaticPropertyName = dist.StaticPropertyName;
var Super = dist.Super;
var SwitchCase = dist.SwitchCase;
var SwitchDefault = dist.SwitchDefault;
var SwitchStatement = dist.SwitchStatement;
var SwitchStatementWithDefault = dist.SwitchStatementWithDefault;
var TemplateElement = dist.TemplateElement;
var TemplateExpression = dist.TemplateExpression;
var ThisExpression = dist.ThisExpression;
var ThrowStatement = dist.ThrowStatement;
var TryCatchStatement = dist.TryCatchStatement;
var TryFinallyStatement = dist.TryFinallyStatement;
var UnaryExpression = dist.UnaryExpression;
var UpdateExpression = dist.UpdateExpression;
var VariableDeclaration = dist.VariableDeclaration;
var VariableDeclarationStatement = dist.VariableDeclarationStatement;
var VariableDeclarator = dist.VariableDeclarator;
var WhileStatement = dist.WhileStatement;
var WithStatement = dist.WithStatement;
var YieldExpression = dist.YieldExpression;
var YieldGeneratorExpression = dist.YieldGeneratorExpression;
export { ArrayAssignmentTarget, ArrayBinding, ArrayExpression, ArrowExpression, AssignmentExpression, AssignmentTargetIdentifier, AssignmentTargetPropertyIdentifier, AssignmentTargetPropertyProperty, AssignmentTargetWithDefault, AwaitExpression, BinaryExpression, BindingIdentifier, BindingPropertyIdentifier, BindingPropertyProperty, BindingWithDefault, Block, BlockStatement, BreakStatement, CallExpression, CatchClause, ClassDeclaration, ClassElement, ClassExpression, CompoundAssignmentExpression, ComputedMemberAssignmentTarget, ComputedMemberExpression, ComputedPropertyName, ConditionalExpression, ContinueStatement, DataProperty, DebuggerStatement, Directive, DoWhileStatement, EmptyStatement, Export, ExportAllFrom, ExportDefault, ExportFrom, ExportFromSpecifier, ExportLocalSpecifier, ExportLocals, ExpressionStatement, ForAwaitStatement, ForInStatement, ForOfStatement, ForStatement, FormalParameters, FunctionBody, FunctionDeclaration, FunctionExpression, Getter, IdentifierExpression, IfStatement, Import, ImportNamespace, ImportSpecifier, LabeledStatement, LiteralBooleanExpression, LiteralInfinityExpression, LiteralNullExpression, LiteralNumericExpression, LiteralRegExpExpression, LiteralStringExpression, Method, Module, NewExpression, NewTargetExpression, ObjectAssignmentTarget, ObjectBinding, ObjectExpression, ReturnStatement, Script, Setter, ShorthandProperty, SpreadElement, SpreadProperty, StaticMemberAssignmentTarget, StaticMemberExpression, StaticPropertyName, Super, SwitchCase, SwitchDefault, SwitchStatement, SwitchStatementWithDefault, TemplateElement, TemplateExpression, ThisExpression, ThrowStatement, TryCatchStatement, TryFinallyStatement, UnaryExpression, UpdateExpression, VariableDeclaration, VariableDeclarationStatement, VariableDeclarator, WhileStatement, WithStatement, YieldExpression, YieldGeneratorExpression };
